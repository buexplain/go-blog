// Code generated by go-bindata. DO NOT EDIT.
// sources:
// resources/view/errors/200.html (436B)
// resources/view/errors/302.html (436B)
// resources/view/errors/400.html (436B)
// resources/view/errors/403.html (436B)
// resources/view/errors/404.html (436B)
// resources/view/errors/500.html (436B)
// resources/view/errors/master.html (799B)

package asset

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resourcesViewErrors200Html = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x51\x6b\xbb\x30\x14\xc5\xdf\x05\xbf\xc3\xfd\xe7\xd9\x54\xfd\x3f\x75\x2c\x11\x86\xeb\x60\x4f\xdb\x83\x85\xed\x31\xea\x1d\x06\x12\x75\xf1\x6a\x5b\x4a\xbf\xfb\x88\x2d\x62\x07\x7b\x39\xc9\x49\xee\xfd\x71\x38\xe2\xdf\xf3\x5b\x5e\x7c\xbe\xef\xa0\x21\x6b\xb2\x30\x10\xcb\x89\xaa\xce\xc2\x00\x00\x40\x58\x24\x05\x55\xa3\xdc\x80\x24\xd9\xbe\x78\xe1\x5b\x76\xf7\xd7\x10\xf5\x1c\xbf\x47\x3d\x49\x96\x77\x2d\x61\x4b\xbc\x38\xf5\xc8\xa0\xba\x3a\xc9\x08\x8f\x14\x7b\xf8\xe3\x42\x1a\xe9\x8b\x6f\x19\xc4\x7f\xa2\x3e\xf8\xfe\x89\xe7\x9d\xed\x15\xe9\xd2\xac\x69\xaf\x3b\x99\xa6\x91\xd7\xc4\xeb\x83\x97\x5f\x99\x5a\x65\x51\xb2\x49\xe3\xa1\xef\x1c\xad\x76\x0f\xba\xa6\x46\xd6\x38\xe9\x0a\xf9\x6c\x22\xd0\xad\x26\xad\x0c\x1f\x2a\x65\x50\xa6\x9b\x24\x82\x71\x40\x37\x7b\x55\x1a\x94\x49\x04\x56\xb7\xda\x8e\x76\x3d\x63\xd5\xf1\xfe\x69\x89\x40\x9a\x0c\x66\xff\x93\x44\xc4\xd7\x6b\x18\x88\xf8\xd6\xa9\x28\xbb\xfa\x94\x85\xc1\xf9\x0c\x84\xb6\x37\x8a\x10\x18\x3a\xd7\xb9\x21\xb6\x6a\x20\x74\x1b\x5f\x14\x83\x0d\x5c\x2e\x7e\xef\x36\x2f\xe6\xfe\xb2\x9f\x00\x00\x00\xff\xff\xda\x2f\x75\xc7\xb4\x01\x00\x00")

func resourcesViewErrors200HtmlBytes() ([]byte, error) {
	return bindataRead(
		_resourcesViewErrors200Html,
		"resources/view/errors/200.html",
	)
}

func resourcesViewErrors200Html() (*asset, error) {
	bytes, err := resourcesViewErrors200HtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/view/errors/200.html", size: 436, mode: os.FileMode(0666), modTime: time.Unix(1545203489, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x19, 0x4d, 0x37, 0xe2, 0x7b, 0x42, 0x56, 0x71, 0xaa, 0x78, 0x7d, 0x92, 0xd3, 0xcb, 0x70, 0xe9, 0x56, 0x55, 0x32, 0x48, 0x6a, 0x17, 0x89, 0xe, 0x69, 0x6a, 0xa1, 0x4e, 0xb1, 0xdf, 0x9d, 0xac}}
	return a, nil
}

var _resourcesViewErrors302Html = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x51\x6b\xbb\x30\x14\xc5\xdf\x05\xbf\xc3\xfd\xe7\xd9\x54\x85\xff\x43\xc7\x12\x61\xb8\x0e\xf6\xb4\x3d\x58\xd8\x1e\xa3\xde\x61\x20\x51\x17\xaf\xb6\xa5\xf4\xbb\x8f\xd8\x22\x76\xb0\x97\x93\x9c\xe4\xde\x1f\x87\x23\xfe\x3d\xbf\xe5\xc5\xe7\xfb\x0e\x1a\xb2\x26\x0b\x03\xb1\x9c\xa8\xea\x2c\x0c\x00\x00\x84\x45\x52\x50\x35\xca\x0d\x48\x92\xed\x8b\x17\xbe\x65\x77\x7f\x0d\x51\xcf\xf1\x7b\xd4\x93\x64\x79\xd7\x12\xb6\xc4\x8b\x53\x8f\x0c\xaa\xab\x93\x8c\xf0\x48\xb1\x87\x3f\x2e\xa4\x91\xbe\xf8\x96\x41\xfc\x27\xea\x83\xef\x9f\x78\xde\xd9\x5e\x91\x2e\xcd\x9a\xf6\xba\x93\x69\x1a\x79\x4d\xbc\x3e\x78\xf9\x95\xa9\x55\x16\x25\x9b\x34\x1e\xfa\xce\xd1\x6a\xf7\xa0\x6b\x6a\x64\x8d\x93\xae\x90\xcf\x26\x02\xdd\x6a\xd2\xca\xf0\xa1\x52\x06\x65\xba\x49\x22\x18\x07\x74\xb3\x57\xa5\x41\x99\x44\x60\x75\xab\xed\x68\xd7\x33\x56\x1d\xef\x9f\x96\x08\xa4\xc9\x60\xf6\x3f\x49\x44\x7c\xbd\x86\x81\x88\x6f\x9d\x8a\xb2\xab\x4f\x59\x18\x9c\xcf\x40\x68\x7b\xa3\x08\x81\xa1\x73\x9d\x1b\x62\xab\x06\x42\xb7\xf1\x45\x31\xd8\xc0\xe5\xe2\xf7\x6e\xf3\x62\xee\x2f\xfb\x09\x00\x00\xff\xff\xdc\xe4\x71\xfe\xb4\x01\x00\x00")

func resourcesViewErrors302HtmlBytes() ([]byte, error) {
	return bindataRead(
		_resourcesViewErrors302Html,
		"resources/view/errors/302.html",
	)
}

func resourcesViewErrors302Html() (*asset, error) {
	bytes, err := resourcesViewErrors302HtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/view/errors/302.html", size: 436, mode: os.FileMode(0666), modTime: time.Unix(1539338030, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x17, 0xde, 0x11, 0x57, 0x9b, 0xac, 0xc9, 0x48, 0xfc, 0x4b, 0xec, 0xe0, 0x51, 0x6e, 0xe8, 0xee, 0x80, 0x1a, 0x54, 0xfd, 0x95, 0x77, 0xf2, 0x42, 0xdc, 0x3, 0xf1, 0xc6, 0x5a, 0xdf, 0x35, 0x2b}}
	return a, nil
}

var _resourcesViewErrors400Html = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x51\x6b\xbb\x30\x14\xc5\xdf\x05\xbf\xc3\xfd\xe7\xd9\x54\x85\xff\x43\xc7\x12\x61\xb8\x0e\xf6\xb4\x3d\x58\xd8\x1e\xa3\xde\x61\x20\x51\x17\xaf\xb6\xa5\xf4\xbb\x8f\xd8\x22\x76\xb0\x97\x93\x9c\xe4\xde\x1f\x87\x23\xfe\x3d\xbf\xe5\xc5\xe7\xfb\x0e\x1a\xb2\x26\x0b\x03\xb1\x9c\xa8\xea\x2c\x0c\x00\x00\x84\x45\x52\x50\x35\xca\x0d\x48\x92\xed\x8b\x17\xbe\x65\x77\x7f\x0d\x51\xcf\xf1\x7b\xd4\x93\x64\x79\xd7\x12\xb6\xc4\x8b\x53\x8f\x0c\xaa\xab\x93\x8c\xf0\x48\xb1\x87\x3f\x2e\xa4\x91\xbe\xf8\x96\x41\xfc\x27\xea\x83\xef\x9f\x78\xde\xd9\x5e\x91\x2e\xcd\x9a\xf6\xba\x93\x69\x1a\x79\x4d\xbc\x3e\x78\xf9\x95\xa9\x55\x16\x25\x9b\x34\x1e\xfa\xce\xd1\x6a\xf7\xa0\x6b\x6a\x64\x8d\x93\xae\x90\xcf\x26\x02\xdd\x6a\xd2\xca\xf0\xa1\x52\x06\x65\xba\x49\x22\x18\x07\x74\xb3\x57\xa5\x41\x99\x44\x60\x75\xab\xed\x68\xd7\x33\x56\x1d\xef\x9f\x96\x08\xa4\xc9\x60\xf6\x3f\x49\x44\x7c\xbd\x86\x81\x88\x6f\x9d\x8a\xb2\xab\x4f\x59\x18\x9c\xcf\x40\x68\x7b\xa3\x08\x81\xa1\x73\x9d\x1b\x62\xab\x06\x42\xb7\xf1\x45\x31\xd8\xc0\xe5\xe2\xf7\x6e\xf3\x62\xee\x2f\xfb\x09\x00\x00\xff\xff\xdc\xe4\x71\xfe\xb4\x01\x00\x00")

func resourcesViewErrors400HtmlBytes() ([]byte, error) {
	return bindataRead(
		_resourcesViewErrors400Html,
		"resources/view/errors/400.html",
	)
}

func resourcesViewErrors400Html() (*asset, error) {
	bytes, err := resourcesViewErrors400HtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/view/errors/400.html", size: 436, mode: os.FileMode(0666), modTime: time.Unix(1539325825, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x17, 0xde, 0x11, 0x57, 0x9b, 0xac, 0xc9, 0x48, 0xfc, 0x4b, 0xec, 0xe0, 0x51, 0x6e, 0xe8, 0xee, 0x80, 0x1a, 0x54, 0xfd, 0x95, 0x77, 0xf2, 0x42, 0xdc, 0x3, 0xf1, 0xc6, 0x5a, 0xdf, 0x35, 0x2b}}
	return a, nil
}

var _resourcesViewErrors403Html = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xc1\x6b\x83\x30\x14\xc6\xef\x82\xff\xc3\x5b\xce\xa6\x5a\xb6\x43\xc7\x12\x61\xb8\x0e\x76\xda\x0e\x16\xb6\x63\xd4\x37\x0c\x24\xea\xe2\xd3\xb6\x94\xfe\xef\x23\xb6\x88\x1d\xec\xf2\x25\x5f\xf2\xde\x8f\x8f\x4f\xdc\xbd\xbc\x67\xf9\xd7\xc7\x16\x6a\xb2\x26\x0d\x03\x31\x9f\xa8\xaa\x34\x0c\x00\x00\x84\x45\x52\x50\xd6\xca\xf5\x48\x92\xed\xf2\x57\xbe\x61\x37\x7f\x35\x51\xc7\xf1\x67\xd0\xa3\x64\x59\xdb\x10\x36\xc4\xf3\x63\x87\x0c\xca\x8b\x93\x8c\xf0\x40\xb1\x87\x3f\xcd\xa4\x81\xbe\xf9\x86\x41\xfc\x2f\xea\x93\xef\x9e\x79\xd6\xda\x4e\x91\x2e\xcc\x92\xf6\xb6\x95\xeb\x75\xe4\x35\xf1\xfa\xe8\xe5\x4f\xa6\x46\x59\x94\x6c\xd4\xb8\xef\x5a\x47\x8b\xdd\xbd\xae\xa8\x96\x15\x8e\xba\x44\x3e\x99\x08\x74\xa3\x49\x2b\xc3\xfb\x52\x19\x94\xeb\x55\x12\xc1\xd0\xa3\x9b\xbc\x2a\x0c\xca\x24\x02\xab\x1b\x6d\x07\xbb\x9c\xb1\xea\x70\xfb\x34\x47\x20\x4d\x06\xd3\x87\xe4\x5e\xc4\x97\x6b\x18\x88\xf8\xda\xa9\x28\xda\xea\x98\x86\xc1\xe9\x04\x84\xb6\x33\x8a\x10\x18\x3a\xd7\xba\x3e\xb6\xaa\x27\x74\x2b\x5f\x14\x83\x15\x9c\xcf\x7e\xef\x3a\x2f\xa6\xfe\xd2\xdf\x00\x00\x00\xff\xff\xde\x99\xf1\xf4\xb4\x01\x00\x00")

func resourcesViewErrors403HtmlBytes() ([]byte, error) {
	return bindataRead(
		_resourcesViewErrors403Html,
		"resources/view/errors/403.html",
	)
}

func resourcesViewErrors403Html() (*asset, error) {
	bytes, err := resourcesViewErrors403HtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/view/errors/403.html", size: 436, mode: os.FileMode(0666), modTime: time.Unix(1539325833, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x89, 0xa1, 0x6e, 0xe2, 0x59, 0x98, 0xe1, 0xc8, 0xf, 0x5d, 0x1b, 0xc0, 0x43, 0xb5, 0x53, 0x7f, 0xf4, 0x7c, 0xec, 0xc7, 0x8, 0x22, 0x4d, 0x33, 0x94, 0xea, 0xb7, 0x56, 0xe, 0xa3, 0x4, 0xec}}
	return a, nil
}

var _resourcesViewErrors404Html = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xc1\x6b\x83\x30\x14\xc6\xef\x82\xff\xc3\x5b\xce\xa6\x5a\xe8\xa1\x63\x89\x30\x5c\x07\x3b\x6d\x07\x0b\xdb\x31\xea\x1b\x06\x12\x75\xf1\x69\x5b\x4a\xff\xf7\x11\x5b\xc4\x0e\x76\xf9\x92\x2f\x79\xef\xc7\xc7\x27\x1e\x5e\xde\xb3\xfc\xeb\x63\x07\x35\x59\x93\x86\x81\x98\x4f\x54\x55\x1a\x06\x00\x00\xc2\x22\x29\x28\x6b\xe5\x7a\x24\xc9\xf6\xf9\x2b\xdf\xb2\xbb\xbf\x9a\xa8\xe3\xf8\x33\xe8\x51\xb2\xac\x6d\x08\x1b\xe2\xf9\xa9\x43\x06\xe5\xd5\x49\x46\x78\xa4\xd8\xc3\x9f\x66\xd2\x40\xdf\x7c\xcb\x20\xfe\x17\xf5\xc9\xf7\xcf\x3c\x6b\x6d\xa7\x48\x17\x66\x49\x7b\xdb\xc9\xf5\x3a\xf2\x9a\x78\x7d\xf4\xf2\x27\x53\xa3\x2c\x4a\x36\x6a\x3c\x74\xad\xa3\xc5\xee\x41\x57\x54\xcb\x0a\x47\x5d\x22\x9f\x4c\x04\xba\xd1\xa4\x95\xe1\x7d\xa9\x0c\xca\xf5\x2a\x89\x60\xe8\xd1\x4d\x5e\x15\x06\x65\x12\x81\xd5\x8d\xb6\x83\x5d\xce\x58\x75\xbc\x7f\x9a\x23\x90\x26\x83\xe9\x26\xd9\x88\xf8\x7a\x0d\x03\x11\xdf\x3a\x15\x45\x5b\x9d\xd2\x30\x38\x9f\x81\xd0\x76\x46\x11\x02\x43\xe7\x5a\xd7\xc7\x56\xf5\x84\x6e\xe5\x8b\x62\xb0\x82\xcb\xc5\xef\xdd\xe6\xc5\xd4\x5f\xfa\x1b\x00\x00\xff\xff\x24\xb7\x8e\xe7\xb4\x01\x00\x00")

func resourcesViewErrors404HtmlBytes() ([]byte, error) {
	return bindataRead(
		_resourcesViewErrors404Html,
		"resources/view/errors/404.html",
	)
}

func resourcesViewErrors404Html() (*asset, error) {
	bytes, err := resourcesViewErrors404HtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/view/errors/404.html", size: 436, mode: os.FileMode(0666), modTime: time.Unix(1539325845, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf1, 0xea, 0xa1, 0x73, 0xc5, 0x3e, 0x85, 0xd0, 0xc9, 0xe8, 0xd1, 0x5e, 0x64, 0x8e, 0x9d, 0x81, 0xe9, 0x62, 0x11, 0xaa, 0xe8, 0x23, 0x9c, 0x30, 0x9f, 0x62, 0x8b, 0x40, 0x73, 0x2b, 0x8b, 0xe5}}
	return a, nil
}

var _resourcesViewErrors500Html = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x51\x6b\xbb\x30\x14\xc5\xdf\x05\xbf\xc3\xfd\xe7\xd9\x54\x7d\xf8\x43\xc7\x12\x61\xb8\x0e\xf6\xb4\x3d\x58\xd8\x1e\xa3\xde\x61\x20\x51\x17\xaf\xb6\xa5\xf4\xbb\x8f\xd8\x22\x76\xb0\x97\x93\x9c\xe4\xde\x1f\x87\x23\xfe\x3d\xbf\xe5\xc5\xe7\xfb\x0e\x1a\xb2\x26\x0b\x03\xb1\x9c\xa8\xea\x2c\x0c\x00\x00\x84\x45\x52\x50\x35\xca\x0d\x48\x92\xed\x8b\x17\xbe\x65\x77\x7f\x0d\x51\xcf\xf1\x7b\xd4\x93\x64\x79\xd7\x12\xb6\xc4\x8b\x53\x8f\x0c\xaa\xab\x93\x8c\xf0\x48\xb1\x87\x3f\x2e\xa4\x91\xbe\xf8\x96\x41\xfc\x27\xea\x83\xef\x9f\x78\xde\xd9\x5e\x91\x2e\xcd\x9a\xf6\xba\x93\x69\x1a\x79\x4d\xbc\x3e\x78\xf9\x95\xa9\x55\x16\x25\x9b\x34\x1e\xfa\xce\xd1\x6a\xf7\xa0\x6b\x6a\x64\x8d\x93\xae\x90\xcf\x26\x02\xdd\x6a\xd2\xca\xf0\xa1\x52\x06\x65\xba\x49\x22\x18\x07\x74\xb3\x57\xa5\x41\x99\x44\x60\x75\xab\xed\x68\xd7\x33\x56\x1d\xef\x9f\x96\x08\xa4\xc9\x60\xf6\x3f\x49\x44\x7c\xbd\x86\x81\x88\x6f\x9d\x8a\xb2\xab\x4f\x59\x18\x9c\xcf\x40\x68\x7b\xa3\x08\x81\xa1\x73\x9d\x1b\x62\xab\x06\x42\xb7\xf1\x45\x31\xd8\xc0\xe5\xe2\xf7\x6e\xf3\x62\xee\x2f\xfb\x09\x00\x00\xff\xff\x5d\x38\xf0\xf5\xb4\x01\x00\x00")

func resourcesViewErrors500HtmlBytes() ([]byte, error) {
	return bindataRead(
		_resourcesViewErrors500Html,
		"resources/view/errors/500.html",
	)
}

func resourcesViewErrors500Html() (*asset, error) {
	bytes, err := resourcesViewErrors500HtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/view/errors/500.html", size: 436, mode: os.FileMode(0666), modTime: time.Unix(1539325848, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x99, 0x7a, 0x16, 0x90, 0xb8, 0x43, 0xa1, 0x8b, 0x64, 0xa9, 0x84, 0x98, 0x0, 0x16, 0x9c, 0xf3, 0xce, 0x5e, 0xe0, 0xf1, 0xb3, 0x4f, 0xaa, 0xe3, 0x78, 0x64, 0x38, 0xd6, 0x17, 0x4c, 0x41, 0xa0}}
	return a, nil
}

var _resourcesViewErrorsMasterHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xcd\xaa\xd3\x40\x14\xde\x07\xf2\x0e\x87\x88\x34\x81\xdb\x24\x2a\xba\x48\x93\x2c\x2a\x17\xbc\xa0\x3b\x5f\x60\x9a\x39\x49\x47\x92\x49\x99\x4c\xdb\x5b\x87\x59\x8a\xe8\x0b\x5c\x10\x5c\xe8\x4a\x44\x57\xfe\x6d\xd4\xb7\xb9\xda\xae\x7c\x05\x99\xb4\x69\x73\x7b\xc5\x2e\x9a\x73\xbe\x9f\x9c\x2f\x9c\x13\x37\x72\x55\x62\x6a\x5b\x00\x00\x93\x9a\xae\xd4\xb6\x34\xbf\x8a\x88\x82\xf1\x08\xc2\xd1\x01\x9b\x11\x4a\x19\x2f\x22\xb8\x1d\xce\xce\x7b\xf8\x92\x51\x39\x8d\xe0\x56\x18\xde\xec\xa1\x53\x64\xc5\x54\x5e\x83\xb3\xba\xac\x45\x04\x37\xc6\xe1\xf8\xf4\xfe\xdd\x1e\x91\xd7\x5c\x0e\x97\x07\xd3\x31\xd5\xb0\xa7\x18\xc1\x1d\xff\x9e\xc0\x6a\xc7\x69\xdb\x8a\x83\xee\x23\x62\xca\x16\xa9\x52\x2c\x07\xbf\xc2\xa6\x21\x05\x82\xd6\xa0\x54\xd7\xb5\x0d\x72\xaa\x75\x1c\x18\xa9\x6d\x6d\xc5\x73\x51\x82\xd6\xb6\xb5\x79\xf3\x65\xf3\xfa\xed\xfa\xf9\xfb\xcb\x97\xef\x20\x26\xc0\x68\xe2\x4c\x05\xe6\x0e\x98\xff\xc4\x51\xca\x48\xb5\x76\xd2\xf5\xb7\x4f\xeb\x1f\x1f\xe2\x80\xa4\xf0\xfb\xe3\x8b\xcb\x9f\xcf\x7e\x5d\x7c\xdd\x5c\x7c\xfe\xf3\xfd\x15\xc4\x93\xd6\xb7\x24\x4c\x3a\xa9\x52\xbe\x29\xcc\xc0\x89\x09\xd8\x64\x82\xcd\x24\xc8\xd5\x0c\x13\x47\xe2\xb9\x0c\x9e\x90\x05\xd9\xa2\xce\x6e\x0d\x6e\x3e\xe7\x99\x64\x35\x77\xbd\xde\x36\x16\x44\x80\x79\x15\x24\x40\xeb\x6c\x5e\x21\x97\x7e\x81\xf2\xb4\x44\x53\x8e\x57\x67\xd4\x1d\x18\x7e\xe0\x9d\x1c\x4c\xfb\x45\x08\xcc\xff\x67\x34\xfc\xc0\xf3\xcd\x63\x74\x75\x24\xe3\x12\xc5\x82\x94\x90\x40\x83\xf2\x6c\xd7\xfd\x3b\x62\xe7\x91\xac\x42\x48\x60\x38\x34\x79\x7c\xc6\x39\x8a\x07\x8f\x1f\x3d\x1c\x5d\x55\xb2\xdc\x6d\x85\x71\x02\xa1\x07\xea\x7a\xe8\xb2\xce\x88\x99\xe1\xef\xd2\x1f\xa5\xdb\x5f\x53\x89\x44\xec\x83\x75\x79\xbd\x23\xa5\xee\xf5\xfa\xc4\x1c\x57\xd8\x49\xb4\xe7\x9a\x32\x0e\xb6\x6b\x68\xaf\xa2\x3d\x12\xdb\xfa\x1b\x00\x00\xff\xff\xc4\xf0\x96\x90\x1f\x03\x00\x00")

func resourcesViewErrorsMasterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_resourcesViewErrorsMasterHtml,
		"resources/view/errors/master.html",
	)
}

func resourcesViewErrorsMasterHtml() (*asset, error) {
	bytes, err := resourcesViewErrorsMasterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/view/errors/master.html", size: 799, mode: os.FileMode(0666), modTime: time.Unix(1559989340, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6d, 0x1f, 0xae, 0x63, 0x29, 0x72, 0xb5, 0xa2, 0x79, 0x85, 0xda, 0x33, 0x4d, 0x78, 0xd2, 0x16, 0xf7, 0x68, 0x54, 0x2e, 0x2d, 0x79, 0xde, 0x1e, 0xae, 0x89, 0x8d, 0x21, 0x13, 0x89, 0x98, 0x96}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resources/view/errors/200.html": resourcesViewErrors200Html,

	"resources/view/errors/302.html": resourcesViewErrors302Html,

	"resources/view/errors/400.html": resourcesViewErrors400Html,

	"resources/view/errors/403.html": resourcesViewErrors403Html,

	"resources/view/errors/404.html": resourcesViewErrors404Html,

	"resources/view/errors/500.html": resourcesViewErrors500Html,

	"resources/view/errors/master.html": resourcesViewErrorsMasterHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"resources": &bintree{nil, map[string]*bintree{
		"view": &bintree{nil, map[string]*bintree{
			"errors": &bintree{nil, map[string]*bintree{
				"200.html":    &bintree{resourcesViewErrors200Html, map[string]*bintree{}},
				"302.html":    &bintree{resourcesViewErrors302Html, map[string]*bintree{}},
				"400.html":    &bintree{resourcesViewErrors400Html, map[string]*bintree{}},
				"403.html":    &bintree{resourcesViewErrors403Html, map[string]*bintree{}},
				"404.html":    &bintree{resourcesViewErrors404Html, map[string]*bintree{}},
				"500.html":    &bintree{resourcesViewErrors500Html, map[string]*bintree{}},
				"master.html": &bintree{resourcesViewErrorsMasterHtml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
